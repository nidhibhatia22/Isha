import numpy as np
import cv2
from matplotlib import pyplot as plt

def watershed(img):
    # img = cv2.imread('..//Image_output//unsharpmask.png')
    b,g,r = cv2.split(img)
    rgb_img = cv2.merge([r,g,b])
    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
    kernel = np.ones((2,2),np.uint8)
    ret, thresh = cv2.threshold(gray,0,255,cv2.THRESH_BINARY_INV+cv2.THRESH_OTSU)
    closing = cv2.morphologyEx(thresh,cv2.MORPH_CLOSE,kernel, iterations = 2)
    sure_bg = cv2.dilate(closing,kernel,iterations=3)
    dist_transform = cv2.distanceTransform(sure_bg,cv2.DIST_L2,3)
    ret, sure_fg = cv2.threshold(dist_transform,0.1*dist_transform.max(),255,0)
    sure_fg = np.uint8(sure_fg)
    unknown = cv2.subtract(sure_bg,sure_fg)

    new_size = (512, 512)
    resize_img = cv2.resize(thresh, new_size)
    cv2.rectangle(resize_img, (45, 90), (230, 230),(0, 0, 255), 2)
    cv2.rectangle(resize_img, (260, 435), (435, 250),(255, 0, 0), 2)
    cv2.rectangle(resize_img, (45, 450), (230, 250),(0, 255, 0), 2)
    out_img = cv2.rectangle(resize_img, (250, 90), (435, 230),(155, 155, 0), 2)
    out_img1 = cv2.cvtColor(out_img,cv2.COLOR_GRAY2RGB)
    # cv2.imshow("img",out_img1)
    # cv2.waitKey()
    return out_img1

# plt.subplot(211),plt.imshow(closing, 'gray')
# plt.title("morphologyEx:Closing:2x2"), plt.xticks([]), plt.yticks([])
# plt.subplot(212),plt.imshow(sure_bg, 'gray')
# # plt.imsave(r'..//Image_output//watershed.png',sure_bg)
# plt.title("Dilation"), plt.xticks([]), plt.yticks([])
# plt.tight_layout()
# plt.show()
# plt.subplot(211),plt.imshow(dist_transform, 'gray')
# plt.title("Distance Transform"), plt.xticks([]), plt.yticks([])
# plt.subplot(212),plt.imshow(sure_fg, 'gray')
# plt.title("Thresholding"), plt.xticks([]), plt.yticks([])
# plt.tight_layout()
# plt.show()
# plt.subplot(211),plt.imshow(unknown, 'gray')
# plt.title("Unknown"), plt.xticks([]), plt.yticks([])
# plt.subplot(211),plt.imshow(img, 'gray')
# plt.title("Result from Watershed"), plt.xticks([]), plt.yticks([])
# plt.tight_layout()
# plt.show()